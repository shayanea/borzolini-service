# <type>(<scope>): <subject>
#
# <body>
#
# <footer>

# Types:
# feat     (new feature for the user, not a new feature for build script)
# fix      (bug fix for the user, not a fix to a build script)
# docs     (changes to the documentation)
# style    (formatting, missing semi colons, etc; no production code change)
# refactor (refactoring production code, eg. renaming a variable)
# test     (adding missing tests, refactoring tests; no production code change)
# chore    (updating grunt tasks etc; no production code change)

# Scopes:
# api      (API related changes)
# auth     (authentication related changes)
# db       (database related changes)
# ui       (user interface related changes)
# deps     (dependency updates)
# config   (configuration changes)
# ci       (continuous integration changes)

# Examples:
# feat(auth): add JWT refresh token support
# fix(api): resolve user creation validation issue
# docs: update API documentation
# style: format code according to prettier rules
# refactor(db): optimize database queries
# test: add unit tests for user service
# chore(deps): update dependencies to latest versions

# Rules:
# - Use present tense ("add" not "added")
# - Use imperative mood ("move cursor to..." not "moves cursor to...")
# - Limit the first line to 72 characters or less
# - Reference issues and pull requests liberally after the first line
# - Consider starting the commit message with an applicable emoji:
#   🐛 :bug: when fixing a bug
#   ✨ :sparkles: when adding a new feature
#   📝 :memo: when adding or updating documentation
#   🎨 :art: when improving the format/structure of the code
#   ♻️ :recycle: when refactoring code
#   🚀 :rocket: when improving performance
#   🔒 :lock: when dealing with security
#   🧪 :test_tube: when adding or updating tests
